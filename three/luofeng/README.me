# 用户注册登录功能
1. 定义start()函数作为整个程序入口，提示用户输入regis/login，通过if判断用户输入的内容.
2. 如果等于regis，或则login,则进入用户注册和登录阶段，如果不满足两者则退出。

## regis()函数，实现注册功能
1. 提示用户输入用户名，通过len()方法判断用户名的长度是否为空，如果为空则退出整个程序。
2. 如果输入的用户不为空，则进入while true循环,首次对count进行加1，后提示用户输入密码。
3. 当用户输入密码后，利用len()方法判断密码的长度不能为空且不能小于6位，如果大于六位则提示用户确认密码。
4. 通过if else判断想次密码是否相等，如果相等则注册成功，否则提示两次密码不相同，注册失败.

## login()函数，实现登录功能
1. 使用with open as f方法打开文件，把文件内容存储到result列表中。
2. 通过for循环遍历字典，并通过split方法分割文件中的元素，获取用户名以及密码。
3. 提示用户输入用户名，通过if判断用户名如果不在users字典中，则退出整个程序。
4. 如果存在字典中，则进入whlie true循环，首次对count进行加1，后提示用户输入登录密码。
5. 通过if判断用户输入的密码是否等于用户注册密码，如果相等则用户登录成功，否则登录失败。


# 获取Nginx访问日志中前10的客户端IP，以及出现的次数。
1. 遍历文件，把文件内容存储到字典中，并统计相同元素出现的次数。
2. 字典反转，即把key/value ==> value/key的形式。
3. 对统计出的元素进行排序，获取前10元素，并通过html表格的形式展示。
4. 字典元素反转后，相同元素出现的次数即为res.keys(). 通过max()方法获取最大值，使用while循环遍历10次, 并结合pop()方法把前一次取出来的值从字典中删除掉。
